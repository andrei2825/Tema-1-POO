Starting audit...
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:15:18: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:15:29: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:21:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:25:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:29:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:33:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:15:18: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:15:29: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:23:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:27:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:31:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:35:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:39:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:43:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:7:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:17:17: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:17:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:26:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:30:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:34:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:38:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:42:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:46:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:14:17: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:14:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:21:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:25:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:29:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:33:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:1:9: Name 'stored_data' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:3:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:15:25: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:17:34: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:20:33: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:23:36: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:26:34: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:29:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:33:5: Class 'ModifiedData' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ModifiedData' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:37:5: Class 'ModifiedData' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ModifiedData' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:41:5: Class 'ModifiedData' looks like designed for extension (can be subclassed), but the method 'getCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ModifiedData' final or making the method 'getCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:45:5: Class 'ModifiedData' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ModifiedData' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\ModifiedData.java:49:5: Class 'ModifiedData' looks like designed for extension (can be subclassed), but the method 'getSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ModifiedData' final or making the method 'getSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:1:9: Name 'stored_data' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:3:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:14:25: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:22:5: Class 'OriginalData' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OriginalData' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:26:5: Class 'OriginalData' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OriginalData' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:30:5: Class 'OriginalData' looks like designed for extension (can be subclassed), but the method 'getCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OriginalData' final or making the method 'getCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:34:5: Class 'OriginalData' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OriginalData' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\stored_data\OriginalData.java:38:5: Class 'OriginalData' looks like designed for extension (can be subclassed), but the method 'getSerials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OriginalData' final or making the method 'getSerials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 51 errors.
