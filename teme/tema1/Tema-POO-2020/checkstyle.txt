Starting audit...
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:15:18: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:15:29: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:21:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:25:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:29:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Actor.java:33:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:14:16: Variable 'numViews' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:16:18: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:16:29: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:25:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:29:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:33:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:37:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:41:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:45:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:49:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Movie.java:49:27: Parameter rating should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:7:8: Unused import - java.util.HashMap. [UnusedImports]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:8:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:18:16: Variable 'numViews' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:20:17: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:20:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:28:24: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:34:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:38:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:42:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:46:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:50:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:54:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\Show.java:58:5: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:14:17: Parameter index should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:14:28: Parameter input should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:21:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:25:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:29:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\entities\User.java:33:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:9:8: Unused import - java.util.Iterator. [UnusedImports]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:17:5: Class 'Commands' looks like designed for extension (can be subclassed), but the method 'command' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commands' final or making the method 'command' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:17:27: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:17:51: Parameter users should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:18:27: Parameter movies should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:18:52: Parameter shows should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:37: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:49:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:69:74: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:86: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:90:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:101: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:101:107: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:105:33: '}' at column 33 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:109: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:109:90: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:109:90: '-' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:110:86: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Commands.java:111: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:15:5: Class 'Queries' looks like designed for extension (can be subclassed), but the method 'query' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Queries' final or making the method 'query' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:15:26: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:15:50: Parameter actors should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:16:26: Parameter movies should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:16:51: Parameter shows should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:16:74: Parameter users should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Queries.java:17:54: Must have at least one statement. [EmptyBlock]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:12:14: Variable 'commands' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:13:13: Variable 'queries' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:14:5: Class 'Solve' looks like designed for extension (can be subclassed), but the method 'solve' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Solve' final or making the method 'solve' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:14:25: Parameter action should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:14:49: Parameter users should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:15:27: Parameter movies should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:15:52: Parameter shows should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:15:75: Parameter actors should be final. [FinalParameters]
[ERROR] D:\OOP\Tema-1-POO\teme\tema1\Tema-POO-2020\.\src\solver\Solve.java:18:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
Audit done.
Checkstyle ends with 74 errors.
